<UserControl x:Class="UICHS.EditEmergencySituationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UICHS"
             mc:Ignorable="d"  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:Custom="http://www.galasoft.ch/mvvmlight" 
            
             d:DesignHeight="800" d:DesignWidth="1000" DataContext="{Binding Source={StaticResource Locator}, Path=EditEmergencySituationVM }">
    <UserControl.Resources>
        <local:IntToStringConverter x:Key="IntToStringConverter"></local:IntToStringConverter>
        <local:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter"></local:TimeSpanToStringConverter>

    </UserControl.Resources>
    <i:Interaction.Triggers>

        <i:EventTrigger EventName="Loaded">
            <Custom:EventToCommand  MustToggleIsEnabledValue="True" Command="{Binding UnLoadedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="0.3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <!--Блок сообщение-->
        <GroupBox Grid.Column="0" Grid.Row="0" Header="Сообщение о ЧС">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Grid.Row="0" Content="Дата" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Label Grid.Column="0" Grid.Row="1" Content="Время" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Label Grid.Column="0" Grid.Row="2" Content="Зарегистрировал" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Label Grid.Column="0" Grid.Row="3" Content="Время сообщения в РОЧС" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <TextBox IsReadOnly="True" Grid.Column="1" Grid.Row="0" Text="{Binding EmergencySituation.DateOfEmergency, StringFormat='dd.MM.yyyy'}"/>
                <TextBox IsReadOnly="True" Grid.Column="1" Grid.Row="1" Text="{Binding ReceivedMessage.TimeOfReceive}"/>
                <TextBox IsReadOnly="True" Grid.Column="1" Grid.Row="2" Text="{Binding DutyOfficer.NameDutyOfficer}"/>
                <TextBox x:Name="tbTimeMess" Grid.Column="1" Grid.Row="3" >
                    <TextBox.Text>
                        <Binding Path="ReceivedMessage.TimeMessageInROCHS" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource TimeSpanToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>
        </GroupBox>

        <!--Блок ЧС-->
        <GroupBox Grid.Column="0" Grid.Row="1" Grid.RowSpan="3" Header="Чрезвычайная ситуация">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="4*"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Content="Область" />

                <Label Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Content="Район" />
                <ComboBox SelectedIndex="0"  Grid.Row="1" Grid.Column="0" SelectedItem="{Binding EmergencySituation.Region}" ItemsSource="{Binding RegionList}"  Margin="0,0,0,4" VerticalAlignment="Bottom">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <Custom:EventToCommand  MustToggleIsEnabledValue="True" Command="{Binding SelectionRegionCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <ComboBox Grid.Row="1" Grid.Column="1" SelectedItem="{Binding EmergencySituation.Neighborhood}" ItemsSource="{Binding NeighborhoodList}"   />
                <Label Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Content="Населенный пункт" />
                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding EmergencySituation.PopylatedLocality}"/>
                <Label Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Content="Адрес" />
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding EmergencySituation.Adress}"/>
                <Label Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Content="Время выезда" />
                <TextBox x:Name="tbCheckTime" Grid.Row="4" Grid.Column="1" >
                    <TextBox.Text>
                        <Binding Path="EmergencySituation.CheckOutTime" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource TimeSpanToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Label Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Content="Время прибытия" />
                <TextBox x:Name="tbArrivalTime" Grid.Row="5" Grid.Column="1" >
                    <TextBox.Text>
                        <Binding Path="EmergencySituation.ArrivalTime" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource TimeSpanToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Label Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" Content="Вид ЧС" />
                <ComboBox Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" SelectedItem="{Binding EmergencySituation.Kind}" ItemsSource="{Binding KindEmergencyList}" ></ComboBox>
                <Label Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center" Content="Описание ЧС (обязательное поле)"  />
                <TextBox x:Name="tbDescr" AcceptsReturn="True" VerticalContentAlignment="Top"  Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" TextWrapping="WrapWithOverflow" Height="auto">
                    <TextBox.Text>
                        <Binding Path="EmergencySituation.DescriptionOfEmergency" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Label Grid.Row="10" Grid.Column="0" VerticalAlignment="Center" Content="Время локализации" />
                <TextBox x:Name="tbTimeLoc" Grid.Row="10" Grid.Column="1" >
                    <TextBox.Text>
                        <Binding Path="EmergencySituation.TimeLocalisation" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource TimeSpanToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>
                <Label Grid.Row="11" Grid.Column="0" VerticalAlignment="Center" Content="Время ликвидации" />
                <TextBox x:Name="tbTimeLiq" Grid.Row="11" Grid.Column="1" >
                    <TextBox.Text>
                        <Binding Path="EmergencySituation.TimeLiquidation" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource TimeSpanToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>

                    </TextBox.Text>
                </TextBox>
                <Grid Grid.ColumnSpan="2" Grid.Row="12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="0.5*"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <CheckBox IsChecked="{Binding EmergencySituation.ToRegistration}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0"></CheckBox>
                    <Label HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Content="Учетный"></Label>
                    <CheckBox IsChecked="{Binding EmergencySituation.ToReport}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2"></CheckBox>
                    <Label HorizontalAlignment="Left" VerticalAlignment="Center"  Grid.Column="3" Content="В сводку"></Label>
                </Grid>

            </Grid>
        </GroupBox>

        <!--Блок техника-->
        <GroupBox Grid.Column="1" Grid.Row="0" Header="Техника">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0.3*"/>
                </Grid.ColumnDefinitions>
                <DataGrid RowHeight="27" Grid.Column="0" Grid.Row="0" CanUserDeleteRows="True" CanUserAddRows="False" Grid.RowSpan="3" AutoGenerateColumns="False" SelectedItem="{Binding CurrentVechicle2Emergency}"  ItemsSource="{Binding Vechicle2Emergency}" >
                    
                    <DataGrid.Columns>
                        <DataGridTemplateColumn  Header="Наименование">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Height="25" >
                                        <TextBox.Text>
                                            <Binding Path="VechicleName" NotifyOnValidationError="True" 
                                                     ValidatesOnDataErrors="True"
                                                     UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <DataErrorValidationRule   ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="dgVech"  Header="Количество" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Height="25" >
                                        <TextBox.Text>
                                            <Binding Path="CountVechicle" NotifyOnValidationError="True" 
                                                     ValidatesOnDataErrors="True"
                                                     Converter="{StaticResource IntToStringConverter}"
                                                     UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <DataErrorValidationRule   ValidatesOnTargetUpdated="True"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
                <Button  Command="{Binding AddRowCommand}" Grid.Column="1" Grid.Row="0" Margin="5" Content="+" FontSize="22"/>
                <Button IsEnabled="{Binding IsButtonMinusEnable}" VerticalContentAlignment="Top" Command="{Binding DeleteRowCommand}" Grid.Column="1" Grid.Row="1" Margin="5" Content="-" FontSize="30"/>
            </Grid>
        </GroupBox>

        <!--Блок последствия-->
        <GroupBox Grid.Column="1" Grid.Row="1" Header="Последствия">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="2" Content="Из них ДЕТИ" FontWeight="Bold" Foreground="Red" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <Label Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left" Content="Погибло"/>
                <TextBox x:Name="tbPerished" Grid.Column="1" Grid.Row="1" >
                    <TextBox.Text>
                        <Binding Path="Victim.Perished" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource IntToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>
                <TextBox Grid.Column="2" Grid.Row="1" x:Name="tbPerCh">
                    <TextBox.Text>
                        <Binding Path="Victim.PerishedChildren" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource IntToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Label Grid.Column="0" Grid.Row="2" HorizontalAlignment="Left" Content="Травмировано"/>
                <TextBox x:Name="tbInj" Grid.Column="1" Grid.Row="2">
                    <TextBox.Text>
                        <Binding Path="Victim.Injured" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource IntToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <TextBox x:Name="tbInjChil" Grid.Column="2" Grid.Row="2" >
                    <TextBox.Text>
                        <Binding Path="Victim.InjuredChildren" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource IntToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Label Grid.Column="0" Grid.Row="3" HorizontalAlignment="Left" Content="Спасено"/>
                <TextBox Grid.Column="1" Grid.Row="3" x:Name="tbResc">
                    <TextBox.Text>
                        <Binding Path="Victim.Rescued" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource IntToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBox Grid.Column="2" Grid.Row="3" x:Name="tbRescChil">
                    <TextBox.Text>
                        <Binding Path="Victim.RescuedChildren" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource IntToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Label Grid.Column="0" Grid.Row="4" HorizontalAlignment="Left" Content="Эвакуировано"/>
                <TextBox Grid.Column="1" Grid.Row="4" x:Name="tbEvac">
                    <TextBox.Text>
                        <Binding Path="Victim.Evacuated" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource IntToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBox Grid.Column="2" Grid.Row="4" x:Name="tbEvacChil">
                    <TextBox.Text>
                        <Binding Path="Victim.EvacuatedChildren" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource IntToStringConverter}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>



        </GroupBox>

        <!--Блок проблемные вопросы-->
        <GroupBox Grid.Column="1" Grid.Row="2" Header="Проблемные вопросы">
            <TextBox VerticalContentAlignment="Top" Height="auto" AcceptsReturn="True" TextWrapping="Wrap" Text="{Binding EmergencySituation.ProblematicIssues}"/>
        </GroupBox>

        <!--Блок СпецДонесение-->
        <GroupBox Grid.Column="1" Grid.Row="3" Header="Специальное донесение">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Command="{Binding  AddSpecialReportCommand}" Margin="20" Grid.Column="0" Content="Добавить"/>
                <Button IsEnabled="{Binding IsButtonDeleteReportEnable}" Command="{Binding DeleteSpecialReportCommand}" Margin="20" Grid.Column="1" Content="Удалить"/>
                <TextBlock Cursor="Hand" Grid.Row="1" Grid.ColumnSpan="2"  Foreground="Blue"  VerticalAlignment="Center" FontWeight="Bold" Text="{Binding PathSpecialReport}" TextWrapping="Wrap" TextDecorations="Underline" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <Custom:EventToCommand Command="{Binding OpenSpecialReportCommand}" MustToggleIsEnabledValue="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBlock>
            </Grid>

        </GroupBox>
        

        <!--блок информация доведена-->
        <GroupBox Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Header="Доведена информация">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="0.07*"/>
                    <RowDefinition Height="0.2*"/>
                </Grid.RowDefinitions>
                <DataGrid   Grid.Row="0" CanUserAddRows="False" AutoGenerateColumns="False"  ItemsSource="{Binding SuperiorOfficers}" SelectedItem="{Binding CurrentSuperiorOfficer}" >
                    <DataGrid.Columns>
                        <DataGridTextColumn IsReadOnly="True" Binding="{Binding TimeReport}"  />
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox  Width="15"
                               IsChecked="{Binding StatusOfReport}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Checked">
                                                <i:InvokeCommandAction Command="{Binding DataContext.CheckedSuperiorOfficerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Unchecked">
                                                <i:InvokeCommandAction Command="{Binding DataContext.UnCheckedSuperiorOfficerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGrid}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>

                                    </CheckBox>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn IsReadOnly="True" Binding="{Binding Position}" />
                    </DataGrid.Columns>
                </DataGrid>
                <Label Grid.Row="1" Content="Другие" VerticalAlignment="Center"></Label>
                <TextBox VerticalContentAlignment="Top" AcceptsReturn="True"  Grid.Row="2" Height="auto" TextWrapping="Wrap" Text="{Binding EmergencySituation.ExtraReportSuperiorOfficer}"/>

            </Grid>
        </GroupBox>
        <!--Блок редактировали-->
        <GroupBox Grid.Column="2" Grid.Row="3" Header="Редактировали">
            <TextBox  VerticalContentAlignment="Top" AcceptsReturn="True" TextWrapping="Wrap" IsReadOnly="True" Height="auto" Text="{Binding EmergencySituation.EditLog, Mode=OneWay}"/>
        </GroupBox>

        <!--Блок кнопки сохр и отмена-->
        <Grid Grid.Column="2" Grid.Row="4" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Command="{Binding SaveCommand}" Margin="10" Grid.Column="0" Content="Сохранить">
                <Button.Style>

                    <Style  TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" >
                        <Style.Triggers>
                            
                            <DataTrigger Binding="{Binding ElementName= tbDescr,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbTimeLoc,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbTimeLiq,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbTimeMess,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbCheckTime,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbArrivalTime,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbPerished,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbPerCh,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbInj,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbInjChil,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbResc,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbRescChil,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>


                            <DataTrigger Binding="{Binding ElementName=tbEvac,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=tbEvacChil,Path=(Validation.HasError)}" Value="true">
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </Button.Style>


            </Button>
            <Button Command="{Binding CancelCommand}" Margin="10"  Grid.Column="1" Content="Отмена"/>

        </Grid>



    </Grid>
</UserControl>
